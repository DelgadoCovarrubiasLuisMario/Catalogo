@page "/personas/nueva"
@page "/personas/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioPersonas _repositorio;
@inject IRepositorioClasificaciones _repositorioC;

<h2>@_mensaje Persona</h2>
<EditForm Model="_persona" FormName="frmPersona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_persona.Name" />
            <ValidationMessage For="()=>_persona.Name" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtCorreo" class="col-2 col-form-label">Correo</label>
        <div class="col-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="_persona.Email" />
            <ValidationMessage For="()=>_persona.Email" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtTelefono" class="col-2 col-form-label">Teléfono</label>
        <div class="col-10">
            <InputText id="txtTelefono" class="form-control" @bind-Value="_persona.Telefono" />
            <ValidationMessage For="()=>_persona.Telefono" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtClasificacion" class="col-2 col-form-label">Clasificación</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_persona.ClasificacionId">
                <option value="0" disabled>Seleccione clasificación... </option>
                @foreach(Clasificacion clasificacion in _clasificaciones)
                {
                    <option value="@clasificacion.Id">@clasificacion.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>_persona.ClasificacionId" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Persona? _persona = new();
    private List<Clasificacion> _clasificaciones = new();

    protected override async Task OnParametersSetAsync()
    {
        _clasificaciones = await _repositorioC.GetClasificaciones();
        if (Id > 0)
        {
            _persona = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nueva";
        }
    }
    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repositorio.Update(Id, _persona!);
        }
        else
        {
            await _repositorio.Add(_persona!);
        }
        Cancelar();
    }
    private void Cancelar()
    {
        _navigator.NavigateTo("/personas");
    }
    }